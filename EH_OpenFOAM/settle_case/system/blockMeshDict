/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
  \\    /   O peration     | Website:  https://openfoam.org
  \\  /    A nd           | Version:  dev
  \\/     M anipulation  |
  \*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

PI   3.14159265;
R1   3.5;
R2   13.5;
L1   15.0;
L2   67.0;

//R1 and R2 components along x and y
R1c #calc "$R1*cos($PI/4)";
mR1c #calc "-$R1*cos($PI/4)";
R2c #calc "$R2*cos($PI/4)";
mR2c #calc "-$R2*cos($PI/4)";

//half of R1 and R2 for square
R1h #calc "$R1/2";
mR1h #calc "-$R1/2";
R2h #calc "$R2/2";
mR2h #calc "-$R2/2";

//negative Rs
mR1 #calc "-$R1";
mR2 #calc "-$R2";

//offsets
OFF0 0;
OFF1 $L1;
OFF2 #calc "$L1+$L2";

NPTX 2;
NPTS 8;
NPTR 8;
NL1 #calc "floor($NPTX*$L1)+2";
NL2 #calc "floor($NPTX*$L2)+2";

vertices
(
 //layer 0
 ($OFF0 $R1h $R1h)
 ($OFF0 $mR1h $R1h)
 ($OFF0 $mR1h $mR1h)
 ($OFF0 $R1h $mR1h)
 ($OFF0 $R1c $R1c)
 ($OFF0 $mR1c $R1c)
 ($OFF0 $mR1c $mR1c)
 ($OFF0 $R1c $mR1c)

  //layer 1
  ($OFF1 $R2h $R2h)
  ($OFF1 $mR2h $R2h)
  ($OFF1 $mR2h $mR2h)
  ($OFF1 $R2h $mR2h)
  ($OFF1 $R2c $R2c)
  ($OFF1 $mR2c $R2c)
  ($OFF1 $mR2c $mR2c)
  ($OFF1 $R2c $mR2c)
  
  //layer 2
  ($OFF2 $R2h $R2h)
  ($OFF2 $mR2h $R2h)
  ($OFF2 $mR2h $mR2h)
  ($OFF2 $R2h $mR2h)
  ($OFF2 $R2c $R2c)
  ($OFF2 $mR2c $R2c)
  ($OFF2 $mR2c $mR2c)
  ($OFF2 $R2c $mR2c)
);

blocks
(
 //block 0
 hex (0  1   2   3    8    9   10   11) ($NPTS $NPTS $NL1) simpleGrading (1 1 1)
 hex (4  5   1   0   12   13    9    8) ($NPTS $NPTR $NL1) simpleGrading (1 1 1)
 hex (5  6   2   1   13   14   10    9) ($NPTS $NPTR $NL1) simpleGrading (1 1 1)
 hex (6  7   3   2   14   15   11   10) ($NPTS $NPTR $NL1) simpleGrading (1 1 1)
 hex (7  4   0   3   15   12   8    11) ($NPTS $NPTR $NL1) simpleGrading (1 1 1)

 //block 1
 hex (8 9 10 11 16 17 18 19) ($NPTS $NPTS $NL2) simpleGrading (1 1 1)
 hex (12 13 9 8 20 21 17 16) ($NPTS $NPTR $NL2) simpleGrading (1 1 1)
 hex (13 14 10 9 21 22 18 17) ($NPTS $NPTR $NL2) simpleGrading (1 1 1)
 hex (14 15 11 10 22 23 19 18) ($NPTS $NPTR $NL2) simpleGrading (1 1 1)
 hex (15 12 8 11 23 20 16 19) ($NPTS $NPTR $NL2) simpleGrading (1 1 1) 
);

    edges
    (
     arc 4 5  ($OFF0  0.0 $R1)
     arc 5 6  ($OFF0  $mR1 0.0)
     arc 6 7  ($OFF0  0.0  $mR1)
     arc 7 4  ($OFF0  $R1  0.0)

     arc 12 13 ($OFF1 0.0 $R2)
     arc 13 14 ($OFF1 $mR2 0.0)
     arc 14 15 ($OFF1 0.0 $mR2)
     arc 15 12 ($OFF1 $R2 0.0)

     arc 20 21 ($OFF2 0.0 $R2)
     arc 21 22 ($OFF2 $mR2 0.0)
     arc 22 23 ($OFF2 0.0 $mR2)
     arc 23 20 ($OFF2 $R2 0.0)
);

boundary
(
    bottom
    {
        type wall;
        faces
        (
            (0 1 2 3)
            (4 5 1 0)
            (5 6 2 1)
            (6 7 3 2)
            (7 4 0 3)
        );
    }
    top
    {
        type wall;
        faces
        (
            (16 17 18 19)
            (20 21 17 16)
            (21 22 18 17)
            (22 23 19 18)
            (23 20 16 19)
        );
    }
    lateralWall
    {
        type wall;
        faces
        (
            (4 5 13 12)
            (5 6 14 13)
            (6 7 15 14)
            (7 4 12 15)
            
            (12 13 21 20)
            (13 14 22 21)
            (14 15 23 22)
            (15 12 20 23)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
